
/* color palette for this theme */
body.TEMPLATE {
  --yellow: #fcff4d;
  --yellow-lighter: #fdff80;
  --yellow-lighter-2: #feffb3;
  --yellow-lighter-3: #ffffe6;
  --yellow-darker: #c9cc00;
  --yellow-darker-2: #969900;
  --light-gray: #b3b3b3;
  --dark-gray: #1a1a1a;
  --red: red;
}

/* variables that determine the theme's color scheme */
body.TEMPLATE {
  /* syntax-highlighting */
  --default-text:     var(--dark-gray); /* default program text */
  --cursor:           var(--dark-gray); /* cursor */
  --comment:          var(--dark-gray); /* code comments */
  --boolean:          var(--dark-gray); /* booleans */
  --builtin:          var(--dark-gray); /* builtins */
  --function-name:    var(--dark-gray); /* function names */
  --variable:         var(--dark-gray); /* variables */
  --keyword:          var(--dark-gray); /* keywords */
  --number:           var(--dark-gray); /* exact numbers */
  --roughnum:         var(--dark-gray); /* rough numbers */
  --rational:         var(--dark-gray); /* rational numbers */
  --bad-number:       var(--dark-gray); /* bad numbers */
  --string:           var(--dark-gray); /* strings */
  --unterm-string:    var(--dark-gray); /* unterminated strings */
  --type:             var(--dark-gray); /* types */

  --line-ruler:             var(--dark-gray); /* vertical line at 100-char boundary */
  --failed-test-marker:     var(--dark-gray); /* bg of line number indicating failed test */
  --region-highlight:       var(--light-gray); /* region highlighted by (check: ... end) or mouse drag, etc. */
  --matching-bracket:       var(--dark-gray); /* right angle brackets surrounding highlighted text */
  --nonmatching-highlight:  var(--yellow);  /* bg of nonmatching regions (e.g. (} )*/
  --line-number:            var(--light-gray);  /* line numbers */

  --background:           var(--yellow); /* main background */
  --background-darker:    var(--yellow-darker); /* darker background */
  --background-darker-2:  var(--yellow-darker-2); /* even darker background */
  --background-lighter:   var(--yellow-lighter); /* lighter background */
  --background-lighter-2: var(--yellow-lighter-2); /* even lighter background */
  --background-lighter-3: var(--yellow-lighter-3); /* thrice lighter than background */

  --inverted-text:      var(--light-gray);  /* text opposite color of default */
  --repl-out:           var(--light-gray);  /* REPL output (non-printed) */
  --err-highlight:      var(--light-gray);  /* links to problematic areas from check blocks */
  --check-pass:         var(--yellow); /* check block bg color */
  --check-pass-lighter: var(--yellow); /* lighter than check bg */
  --check-fail:         var(--yellow); /* check fail bg color */
  --check-fail-lighter: var(--yellow);/* lighter than check fail */

  --check-error:          var(--yellow); /* check blocks with unexpected errors */
  --check-error-lighter:  var(--yellow); /* lighter than check-error */
  --summary-error:        var(--yellow); /* announcement that blocks errored (top) */

  --err-halo-selected:    var(--yellow); /* border around errors currently *in focus* */
  --err-halo-unselected:  var(--yellow); /* border around errors NOT in focus */

  --unknown: var(--red);  /* unknown elements */
}


/* wrapper on entire editor */
body.TEMPLATE .CodeMirror,
body.TEMPLATE .inlineExample {
  background: var(--background);
  color: var(--default-text);
}

/* REPL and editor */
body.TEMPLATE .repl .CodeMirror,
body.TEMPLATE .replMain,
body.TEMPLATE {
  background-color: var(--background);
}

/* syntax highlighting */
body.TEMPLATE .CodeMirror div.CodeMirror-cursor { border-left: 2px solid var(--cursor); }
body.TEMPLATE .cm-s-default.CodeMirror { color: var(--default-text); }
body.TEMPLATE .cm-s-default .cm-comment { color: var(--comment); }
body.TEMPLATE .cm-s-default .cm-boolean { color: var(--boolean); }
body.TEMPLATE .cm-s-default .cm-builtin { color: var(--builtin); }
body.TEMPLATE .cm-s-default .cm-function-name { color: var(--function-name); }
body.TEMPLATE .cm-s-default .cm-variable { color: var(--variable); }
body.TEMPLATE .cm-s-default .cm-keyword { color: var(--keyword); font-weight: bold; }
body.TEMPLATE .cm-s-default .cm-number { color: var(--number); }
body.TEMPLATE .cm-s-default .cm-roughnum { color: var(--roughnum); }
body.TEMPLATE .cm-s-default .cm-bad-number { color: var(--bad-number); font-weight: bold; }
body.TEMPLATE .cm-s-default .cm-string { color: var(--string); }
body.TEMPLATE .cm-s-default .cm-unterminated-string { color: var(--unterm-string); font-weight: bold; }
body.TEMPLATE .cm-s-default .cm-type { color: var(--type); }
body.TEMPLATE .cptteach-fixed { background: var(--cptteach-fixed); }

/* text selected by mouse */
body.TEMPLATE div.CodeMirror-selected,
body.TEMPLATE span.CodeMirror-selectedtext {
  background-color: var(--region-highlight) !important;
}

/* right angles surrounding matched regions */
body.TEMPLATE .CodeMirror-matchingbracket::before {
  content: "";
  position: absolute;
  height: 100%;
  width: 100%;
  border: 0px solid var(--matching-bracket);
  z-index: 1000;
}

/* highlighting of matched regions such as (fun ... end), etc. */
body.TEMPLATE div.CodeMirror span.CodeMirror-matchingbracket-region {
  background-color: var(--region-highlight);
  border-top: 0.1em solid var(--region-highlight);
  border-bottom: 0.1em solid var(--region-highlight);
}

body.TEMPLATE div.CodeMirror span.CodeMirror-matchingbracket-region:last-of-type {
    box-shadow: 0.5em 0 0.25em var(--region-highlight);
}
body.TEMPLATE div.CodeMirror span.CodeMirror-matchingbracket-region:first-of-type {
    box-shadow: -0.5em 0 0.25em var(--region-highlight);
}
body.TEMPLATE div.CodeMirror span.CodeMirror-matchingbracket-region:first-of-type:last-of-type {
    box-shadow: -0.5em 0 0.25em var(--region-highlight), 0.5em 0 0.25em var(--region-highlight);
}
body.TEMPLATE div.CodeMirror span.CodeMirror-matchingbracket.open {
  box-shadow: -0.3ex 0 0.3ex var(--region-highlight);
}
body.TEMPLATE div.CodeMirror span.CodeMirror-matchingbracket.open:last-of-type {
  box-shadow: 0.5em 0 0.25em var(--region-highlight), -0.3ex 0 0.3ex var(--region-highlight);
}
body.TEMPLATE div.CodeMirror span.CodeMirror-matchingbracket.close {
  box-shadow: 0.3ex 0 0.3ex var(--region-highlight);
}
body.TEMPLATE div.CodeMirror span.CodeMirror-matchingbracket.close:first-of-type {
  box-shadow: -0.5em 0 0.25em var(--region-highlight), 0.3ex 0 0.3ex var(--region-highlight);
}

body.TEMPLATE .CodeMirror-matchingbracket.close::before {
  border-width: 0px 0.3ex 0.3ex 0px;
  border-bottom-right-radius: 0.4ex;
  margin: 0.3ex;
}

body.TEMPLATE .CodeMirror-matchingbracket.open::before {
  border-width: 0.3ex 0px 0px 0.3ex;
  border-top-left-radius: 0.4ex;
  margin: -0.3ex;
}

body.TEMPLATE div.CodeMirror span.CodeMirror-nonmatchingbracket {
  background-color: var(--nonmatching-highlight);
  color: var(--check-error);
}

body.TEMPLATE div.CodeMirror span.CodeMirror-nonmatchingbracket-region {
  background-color: var(--nonmatching-highlight);
  border-top: 0.1em solid var(--nonmatching-highlight);
  border-bottom: 0.1em solid var(--nonmatching-highlight);
}

/* scrollbar in the definitions window */
body.TEMPLATE .CodeMirror-vscrollbar::-webkit-scrollbar {
  width: 15px;
  background-color: var(--background-lighter);
}

body.TEMPLATE .CodeMirror-vscrollbar::-webkit-scrollbar-thumb {
  background-color: var(--background-lighter-2);
  border-radius: 2px;
}

body.TEMPLATE .CodeMirror-vscrollbar::-webkit-scrollbar-thumb:hover {
  background-color: var(--background-lighter-3);
}

/* other scrollbars (interactions window) */
body.TEMPLATE ::-webkit-scrollbar {
  width: 13px;
}

body.TEMPLATE ::-webkit-scrollbar-track {
  background-color: var(--background-lighter);
}

body.TEMPLATE ::-webkit-scrollbar-thumb {
  background-color: var(--background-lighter-2);
  border-radius: 2px;
}

body.TEMPLATE ::-webkit-scrollbar-thumb:hover {
  background-color: var(--background-lighter-3);
  cursor: pointer;
}

/* lefthand gutters */
body.TEMPLATE .cm-s-default .CodeMirror-gutters { 
  background: var(--background); 
  border-right: 1px solid var(--background-lighter);
}

body.TEMPLATE .cm-s-default .CodeMirror-guttermarker { 
  color: var(--line-number);
}

body.TEMPLATE .cm-s-default .CodeMirror-guttermarker-subtle { 
  color: var(--line-number); 
}

/* line numbers */
body.TEMPLATE .cm-s-default .CodeMirror-linenumber { 
  color: var(--line-number); 
}

/* 100 character line ruler */
body.TEMPLATE .CodeMirror div.CodeMirror-ruler {
  border: 1.5px;
  border-color: var(--line-ruler) !important;
  border-style: solid;
  border-left-style: none !important;
}

/* div containing spinny Pyret and loading messages */
body.TEMPLATE #loader {
  background-color: var(--background);
}

/* pirate text on loader screen */
body.TEMPLATE #loader > p {
  color: var(--default-text);
}

body.TEMPLATE div.trace.error {
   background-color: var(--check-error-lighter);
}

body.TEMPLATE div.spy-block {
  border: 1px solid var(--background-lighter-2);
  background: var(--background-darker);
  color: var(--default-text);
}

body.TEMPLATE div.spy-block > .spy-title {
  border-bottom: 1px solid var(--background-lighter-2);
}

body.TEMPLATE div.spy-block > table > tbody > tr {
  border: 1px solid var(--background-lighter-2);
  background: var(--background);
}

body.TEMPLATE div.spy-block > table > tbody > tr:nth-child(even) {
  background: var(--background-lighter);
}

body.TEMPLATE div.spy-block > table > tbody > tr > td {
  border-right:  1px solid var(--background-lighter-2);
}

body.TEMPLATE #output > .compile-error:not(.highlights-active):hover:after,
body.TEMPLATE .check-block-error > .compile-error:not(.highlights-active):hover::after,
body.TEMPLATE .check-block-test.failing-test:not(.highlights-active):hover {
    box-shadow: 0 0 2em var(--err-halo-selected);
}

body.TEMPLATE .repl {
  background-color: var(--background);
}

/* >>> in the repl */
body.TEMPLATE .repl-prompt,
body.TEMPLATE .repl-echo::before, 
body.TEMPLATE .repl-prompt::before {
  color: var(--default-text);
}

body.TEMPLATE .check {
  border: 1px solid var(--unknown);
}

body.TEMPLATE .check-success {
  color: var(--check-pass);
  background-color: var(--background-lighter);
}

body.TEMPLATE .check-failure {
  color: var(--check-fail);
  background-color: var(--background-lighter);
}

body.TEMPLATE .check-block {
  background: var(--background-lighter);
}

body.TEMPLATE .check-block-failed {
  color: var(--check-fail);
  background-color: var(--background-lighter);
}

body.TEMPLATE .check-block-errored {
  color: var(--check-error);
  background-color: var(--background-lighter);
}

body.TEMPLATE .check-block-success {
  color: var(--check-pass);
  background-color: var(--background-lighter);
}

body.TEMPLATE .testing-summary{
  color: var(--default-text);
  background: var(--background-lighter-2);
}

body.TEMPLATE .progressStep {
  border: 1px solid var(--unknown);
}

body.TEMPLATE .progressStep.done {
  background-color: var(--unknown);
}

body.TEMPLATE .progressDone {
  color: var(--unknown);
}

body.TEMPLATE .instructionsWidget {
  background-color: var(--unknown);
  border: 1px dotted var(--unknown);
  color: var(--unknown);
}

body.TEMPLATE .instructionsWidget .toggleInstructions {
  color: var(--unknown);
}

body.TEMPLATE #program-name-container input {
  background: var(--background);
}

body.TEMPLATE .replPrint {
  color: var(--default-text);
}

body.TEMPLATE .replOutput {
  color: var(--repl-out);
}

body.TEMPLATE .replTextOutput {
  color: var(--default-text);
}

body.TEMPLATE .replOutput.expanded > dl {
   border: 1px solid var(--unknown);
}

body.TEMPLATE .replOutputPassed {
  color: var(--unknown);
}

body.TEMPLATE .replOutputFailed {
  color: var(--unknown);
}

/* rational numbers and their repeating decimals */
body.TEMPLATE .rationalNumber,
body.TEMPLATE .rationalRepeat {
 color: var(--rational);
}

body.TEMPLATE .replImageThumbnail:hover canvas {
  box-shadow: 0px 2px 4px var(--background-lighter-2);
}

body.TEMPLATE .test-reason {
  color: var(--default-text);
}

body.TEMPLATE a.highlight {
  color: var(--err-highlight) !important;
}

body.TEMPLATE .emphasize-line {
  background-color: var(--unknown);
}

body.TEMPLATE .check-highlight {
 background-color: var(--unknown);
 border-bottom: 2px solid var(--unknown);
}

body.TEMPLATE .compile-error {
  border: 1px dashed var(--err-halo-unselected);
  color: var(--default-text);
  background: var(--background);
}

body.TEMPLATE .compile-error a {
  color: var(--err-halo-selected);
}

body.TEMPLATE .parse-error {
  border: 1px dashed var(--err-halo-unselected);
  background: var(--background);
}

body.TEMPLATE .error-icon {
  color: var(--err-halo-selected);
}

body.TEMPLATE .parse-error a {
  color: var(--err-halo-unselected);
}

body.TEMPLATE .topbar {
  background-color: var(--unknown);
}

/* Resizable REPL */
body.TEMPLATE #handle{
  background:-webkit-linear-gradient(left, 
    var(--background-lighter) 0%,
    var(--background-lighter-2) 40%,
    var(--background-lighter-2) 60%,
    var(--background-lighter) 100%);
  background:-o-linear-gradient(left, 
    var(--background-lighter) 0%,
    var(--background-lighter-2) 40%,
    var(--background-lighter-2) 60%,
    var(--background-lighter) 100%);
  background:-moz-linear-gradient(left, 
    var(--background-lighter) 0%,
    var(--background-lighter-2) 40%,
    var(--background-lighter-2) 60%,
    var(--background-lighter) 100%);
  background:linear-gradient(to right, 
    var(--background-lighter) 0%, 
    var(--background-lighter-2) 40%,
    var(--background-lighter-2) 60%,
    var(--background-lighter) 100%);
  border: 1px solid var(--background-darker-2);
}

body.TEMPLATE .module-info-hover {
  border: 1px solid var(--default-text);
  background-color: var(--background);
}

body.TEMPLATE .editor-check-block-success {
  background: var(--check-pass);
  box-shadow: 0 1em 11px 2px var(--check-pass);
}

body.TEMPLATE .editor-check-block-failed {
  background: var(--check-fail);
  box-shadow: 0 0.5em 11px 3px var(--check-fail);
}

body.TEMPLATE .editor-check-block-error {
  background: var(--check-error);
  box-shadow: 0 1em 11px 2px var(--check-error);
}

@keyframes emphasize-error {
  from {background-color: var(--background);}
  to {}
}

body.TEMPLATE .check-block-test.failing-test:not(.highlights-active) {
  color: var(--check-fail-lighter);
  background-color: var(--background);
}
body.TEMPLATE .check-block-test.passing-test {
  color: var(--check-pass-lighter);
  background-color: var(--background);
}

body.TEMPLATE #output > .compile-error.highlights-active,
body.TEMPLATE .check-block-error .highlights-active.compile-error,
body.TEMPLATE .check-block-test.highlights-active {
  border: 0.3em var(--err-halo-selected) solid;
}

body.TEMPLATE .check-block-error .highlights-active.compile-error,
body.TEMPLATE .check-block-test.highlights-active {
  color: var(--check-error-lighter);
  background-color: var(--background);
}

body.TEMPLATE .test-reason:empty,
body.TEMPLATE .check-block-error:empty {
  color: var(--unknown);
}

body.TEMPLATE .check-block-error:empty {
  background-color: var(--unknown);
}

body.TEMPLATE .check-block-test.failing-test.highlights-active > header {
  color: var(--check-fail-lighter);
  background-color: var(--background);
}

body.TEMPLATE .check-block-test .CodeMirror {
  background: var(--background);
}

body.TEMPLATE .errored-test-marker {
  background-color: var(--check-error);
}

body.TEMPLATE .failed-test-marker {
  background-color: var(--failed-test-marker);
}

/* tests passed and failed summary */
body.TEMPLATE .summary-bits {
  color: var(--default-text);
  background-color: var(--background-lighter);
}

body.TEMPLATE .summary-bit.summary-passed {
  color: var(--check-pass);
  background: var(--background-lighter);
}

body.TEMPLATE .summary-bit.summary-failed {
  color: var(--check-fail);
  background: var(--background-lighter);
}

body.TEMPLATE .summary-errored {
  background: var(--check-error);
  color: var(--summary-error);
}

body.TEMPLATE .summary-text {
  border-left: 1px var(--summary-error) solid;
}

body.TEMPLATE .cm-snippet {
  border: 1px var(--background-lighter-2) dashed;
}

body.TEMPLATE .cm-snippet header {
  background: var(--background-darker);
  /* box-shadow: 0 0 3px hsla(0,0%,0%,0.5); */
  border-bottom: 1px var(--background-lighter-2) solid;
}

body.TEMPLATE table {
  border:1px var(--background-lighter-2) solid;
  background: var(--background-lighter);
}

body.TEMPLATE div.choiceContainer > button {
  background-color: var(--unknown);
  color: var(--unknown);
  transition: box-shadow 0.2s;
}

body.TEMPLATE th {
    background: var(--background-darker);
}

body.TEMPLATE th, td {
  border-right: 1px var(--background-lighter-2) solid;
}

/* odd table rows */
body.TEMPLATE tr {
  background-color: var(--background-lighter);
}

/* even table rows */
body.TEMPLATE tr:nth-child(even){
  background-color: var(--background-lighter-2)
}

body.TEMPLATE table.pyret-table thead {
  box-shadow: 0px 2px 2px var(--background-lighter);
}
body.TEMPLATE table.pyret-row th {
  box-shadow: 2px 0px 2px var(--background-lighter), -2px 0px 2px var(--background-lighter);
}
/* NOTE(joe): this helps distinguish a row that appears in a table cell */
body.TEMPLATE table.pyret-row {
  box-shadow: 2px 2px 2px var(--background-lighter);
}

body.TEMPLATE .stale.test-results .stale-warning {
  color: var(--inverted-text);
  background-color: var(--check-fail);
}

body.TEMPLATE .stale.test-results .check-block-failed {
  color: var(--check-fail);
  background-color: var(--background);
}

body.TEMPLATE .stale.test-results .check-block-success {
  color: var(--check-pass);
  background-color: var(--background);
}

body.TEMPLATE .stale.test-results .check-block-errored {
  color: var(--unknown);
  background-color: var(--background);
}

body.TEMPLATE .stale.test-results .check-block-test.failing-test:not(.highlights-active) {
  background-color: var(--unknown);
}

body.TEMPLATE .stale.test-results .check-block-test.highlights-active {
  background-color: var(--unknown);
}

body.TEMPLATE .stale.test-results .check-block-test.highlights-active > header {
  background-color: var(--unknown);
}

body.TEMPLATE .stale.test-results .check-block-test.passing-test {
  background-color: var(--unknown);
}

body.TEMPLATE .stale.test-results .testing-summary .summary-passed {
  color: var(--check-pass);
  background: var(--background-lighter);
}

body.TEMPLATE .stale.test-results .testing-summary .summary-failed {
  color: var(--check-fail);
  background: var(--background-lighter);
}

body.TEMPLATE .stale.test-results .testing-summary .summary-errored {
  background: var(--check-error);
  color: var(--summary-error);
}

body.TEMPLATE .stale .compile-error.highlights-active,
body.TEMPLATE .stale .compile-error.highlights-active,
body.TEMPLATE .stale .check-block-test.highlights-active {
  border-color: var(--unknown);
}
body.TEMPLATE .error-bg {
  background-color: var(--check-error);
}
body.TEMPLATE .ok-bg {
  background-color: var(--unknown);
}

body.TEMPLATE #help-keys {
  background-color: var(--unknown);
  border: 50px solid var(--unknown);
}

body.TEMPLATE #doc-overlay{
  box-shadow: 0px 0px 5px var(--unknown);
}

body.TEMPLATE #doc-overlay iframe{
  background-color: var(--unknown);
}

body.TEMPLATE #doc-bar{
  color: var(--unknown);
  background: var(--unknown);
}

body.TEMPLATE #doc-close{
  background: var(--unknown);
}

body.TEMPLATE #doc-close:hover{
  background: var(--unknown);
}

body.TEMPLATE #header a {
  color: var(--default-text);
}

body.TEMPLATE .share {
  background-color: var(--unknown);
  box-shadow: 0px 3px 5px var(--unknown);
}

body.TEMPLATE .ui-tooltip {
  background: var(--unknown);
}

body.TEMPLATE .ui-tooltip.ui-widget-content {
  background: var(--unknown);
}

body.TEMPLATE .sharebox {
  border: 1px solid var(--unknown);
}